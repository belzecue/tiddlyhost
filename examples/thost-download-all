#!/bin/bash
set -euo pipefail

#
# Bash script showing how to use curl to download all your sites.
#
# Example usage:
#   ./thost-download-all youremail@example.com yourpassword
#
# To avoid including your password in scripts, you could do something like
# this for example:
#   echo yourpassword > ~/.thostpass
#   chmod 600 ~/.thostpass
#
# Then:
#   ./thost-download-all youremail@example.com $(cat ~/.thostpass)
#

show_usage() {
  echo Usage:
  echo "  $0 <email> <password>"
  exit 1
}

EMAIL=$1
PASSWD=$2

DOWNLOAD_DIR=${DOWNLOAD_DIR:-./downloads}
mkdir -p $DOWNLOAD_DIR

[[ -z "$EMAIL" ]] && show_usage
[[ -z "$PASSWD" ]] && show_usage

TIDDLYHOST=tiddlyhost.com
SIGN_IN=https://$TIDDLYHOST/users/sign_in
COOKIES=$(mktemp)
trap "rm -f $COOKIES" EXIT
CURL="curl -s --cookie-jar $COOKIES --cookie $COOKIES"

# Read authenticity_token
TOKEN=$($CURL $SIGN_IN | grep '"csrf-token"' | cut -d'"' -f4)

# Log in
$CURL -X POST $SIGN_IN \
  -d "authenticity_token=$TOKEN" \
  -d "user[email]=$EMAIL" \
  -d "user[password]=$PASSWD" \
  -o /dev/null

# Check we logged in succesfully
OK=$($CURL -I "https://$TIDDLYHOST/sites" | head -1 | grep '200 OK')
[[ -z "$OK" ]] && echo "Login failed." && exit 1

TIMESTAMP=$(date +%Y%m%d%H%M%S)

# Get a list of all sites with their urls
# (To keep this example simple we'll skip Tiddlyspot sites.)
SITES=$($CURL "https://tiddlyhost.com/sites.json" | jq -r '.[]|select(.is_tspot==false)|.name')

for s in $SITES; do
  file="${DOWNLOAD_DIR}/${s}.${TIMESTAMP}.html"
  echo "Downloading site ${s} to ${file}"
  $CURL "https://$s.tiddlyhost.com/download" -o "${file}"
done

# Clean up
rm -f $COOKIES
